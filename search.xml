<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[如何使用Visual Studio将传统桌面程序转制为UWP程序]]></title>
      <url>https://www.mxvar.com/2018/06/02/conver-win32-to-uwp/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p><code>Desktop Bridge</code>是内置于平台中的基础架构，借助它，可以使用现代化的 Windows 应用包来分发Windows Forms、WPF 或 Win32 桌面应用或游戏。</p></blockquote><h1 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h1><p>通过将Windows 桌面程序转制为Windows 10 UWP应用包有下面的优点：</p><ul><li><p>简化部署。使用此<code>Desktop Bridge</code>的应用和游戏都具有出色的部署体验。 这体验确保用户可以放心地安装应用，并对其进行更新。如果用户选择卸载应用，则将完全删除它，不会留下任何痕迹。 这能减少编写设置体验的时间，并使用户使用最新应用。</p></li><li><p>自动更新和许可。你的应用能够参与 <code>Microsoft Store</code> 的内置许可和自动更新设施。 自动更新是高度可靠和高效的机制，因为仅下载文件的已更改部分。</p></li><li><p>扩大覆盖范围并简化盈利过程。选择通过 <code>Microsoft Store</code>进行分发可将覆盖范围扩大至数以百万的 <code>Windows10</code>用户，这些用户可以通过当地支付选项获取应用、游戏和应用内商品。</p></li><li><p>添加 UWP 功能。你可以按照自己的节奏向应用的程序包添加 UWP 功能，如 XAML 用户界面、动态磁贴更新、UWP 后台任务、应用服务以及许多其他功能。</p></li><li><p>拓展跨设备用例。通过使用桥，可以将代码逐渐迁移到通用 Windows 平台，以覆盖所有的 Windows10 设备，包括手机、Xbox One 和 HoloLens。</p></li></ul><h1 id="环境需求"><a href="#环境需求" class="headerlink" title="环境需求"></a>环境需求</h1><p><code>Desktop Bridge</code>是在 Windows 10 版本 1607 中引入，它仅可用于面向 <code>Windows 10 周年更新（10.0；版本 14393）</code>或 <code>Visual Studio</code> 更高版本的项目中。</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>开发者在将应用打包为UWP引用之前需要清理下面相关问题的代码：</p><ul><li><p>你的应用使用早于 4.6.1 的 .NET 版本。 仅 .NET 4.6.1 受支持。 在进行打包之前，需要将应用重定目标到 .NET 4.6.1。</p></li><li><p>应用始终使用提升的安全权限运行。 你的应用需要在以交互用户身份运行时工作。 从 Windows 应用商店安装应用的用户可能不是系统管理员，因此需要应用以提升的权限运行意味着它无法为标准用户正确运行。</p></li><li><p>应用需要内核模式驱动程序或 Windows 服务。 该桥适用于应用，但不支持内核模式驱动程序或需要在系统帐户下运行的 Windows 服务。 使用后台任务，而不是 Windows 服务。</p></li><li><p>在进程内将应用的模块加载到不在 Windows 应用包中的进程。 不允许此操作，这意味着不支持进程中扩展，如 shell 扩展。 但是，如果你在同一个程序包中有两个应用，则可以在它们之间执行进程间通信。</p></li><li><p>应用使用自定义的应用程序用户模型 ID (AUMID)。 如果进程调用 SetCurrentProcessExplicitAppUserModelID 以设置其自己的 AUMID，则它可能仅使用应用模型环境/Windows 应用包为其生成的 AUMID。 无法定义自定义 AUMID。</p></li><li><p>应用修改 <code>HKEY_LOCAL_MACHINE (HKLM)</code>注册表配置单元。 应用的任何创建 HKLM 键或打开一个键以进行修改的尝试都会导致拒绝访问失败。 请记住，应用具有其自己的注册表专用虚拟化视图，因此用户范围和计算机范围的注册表配置单元（即 HKLM 的本质）的想法不适用。 你将需要找到另一种方法来实现 HKLM 的用途，如改为写入 <code>HKEY_CURRENT_USER (HKCU)</code>。</p></li><li><p>应用使用 <code>ddeexec</code>注册表子项作为启动另一个应用的方式。 改为使用应用程序包清单中的各种可激活扩展配置的 DelegateExecute 谓词处理程序之一。</p></li><li><p>你的应用会写入 <code>AppData</code>文件夹或注册表，目的是与其他应用共享数据。 转换后，<code>AppData</code>将重定向到本地应用数据存储，该存储是每个 UWP 应用的专用应用商店。</p></li><li><p>你的应用将写入 <code>HKEY_LOCAL_MACHINE</code>注册表配置单元的所有条目都将重定向到隔离的二进制文件中，你的应用写入 <code>HKEY_CURRENT_USER</code>注册表配置单元的任何条目都将按用户、按应用放入专用位置中。 有关文件和注册表重定向的更多详细信息，请参阅在桌面桥幕后。</p></li><li><p>使用不同的进程间数据共享方式。 有关详细信息，请参阅存储和检索设置以及其他应用数据。</p></li><li><p>应用写入应用的安装目录。 例如，应用写入与你的 <code>exe</code>放置在同一个目录中的日志文件。 此操作不受支持，因此你需要找到另一个位置，如本地应用数据存储。</p></li><li><p>应用安装需要用户交互。 应用安装程序必须能够在无提示的情况下运行，并且它必须安装默认不在干净操作系统映像中的所有先决条件。</p></li><li><p>应用使用当前工作目录。 在运行时，打包的桌面应用不会得到你之前在桌面 .LNK 快捷方式中指定的相同工作目录。 如果具有正确的目录对应用正常运行很重要，你需要在运行时更改 CWD。</p></li><li><p>应用需要<code>UIAccess</code>。 如果应用程序在<code>UAC</code>清单的 <code>requestedExecutionLevel</code> 元素中指定<code>UIAccess=true</code>，则当前不支持转换为 UWP。 有关详细信息，请参阅 UI 自动化安全概述。</p></li><li><p>应用公开<code>COM</code>对象。 来自程序包内的进程和扩展可以注册并使用 <code>COM</code>和 <code>OLE</code>服务器，进程内和进程外 (OOP) 皆可。 创意者更新添加了打包的<code>COM</code>支持，它提供注册 <code>OOP COM</code>和 <code>OLE</code>服务器（现在这些服务器在包外部可见）的功能。 请参阅对桌面桥的<code>COM 服务器</code>和 <code>OLE</code> 文档支持。</p></li><li><p>打包的 <code>COM</code>支持适用于现有的<code>COM API</code>，但不适用于依赖直接读取注册表的应用程序扩展，因为打包的 COM 位于一个专用位置。</p></li><li><p>应用公开<code>GAC</code>程序集以供其他进程使用。 在当前版本中，应用无法公开 GAC 程序集以供来自 Windows 应用包外部可执行文件的进程使用。 来自程序包内的进程可以照常注册和使用 GAC 程序集，但它们在外部将不可见。 这意味着，OLE 等互操作方案在被外部进程调用时不起作用。</p></li><li><p>你的应用正以不受支持的方式链接<code>C 运行时库 (CRT)</code>。 <code>Microsoft C/C++</code> 运行时库提供用于为 Microsoft Windows 操作系统编程的例程。 这些例程自动执行许多不采用 C 和 C++ 语言提供的常见编程任务。 如果你的应用利用 C/C++ 运行时库，你需要确保它以受支持的方式链接。<br>其他具体内容参考微软官方文档：<a href="https://docs.microsoft.com/en-US/windows/uwp/porting/desktop-to-uwp-prepare" target="_blank" rel="external">Windows 开发中心</a></p></li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>这里以一个简单的WPF <code>Hello World</code>程序来示例。<br>运行环境：</p><ul><li>Windows 10 1803</li><li>Visual Studio Professional 2017 15.7.3</li></ul><ol><li>新建<code>WPF</code>程序。<br>注意，这里需要将<code>.NET Framework</code>的版本选择为<code>4.6.1</code>以上，如果系统中没有<code>4.6.1</code>以上的版本,通过<code>Visual Studio Installer</code>来以组件的形式安装高版本的<code>.NET Framework</code>。<br><img src="https://i.loli.net/2018/06/02/5b12a864d998a.png" alt="新建WPF程序"></li><li><p>填充代码<br>在<code>MainWindow.xaml</code>文件中填写一个<code>Button</code>以及其点击的事件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Window</span> <span class="attr">x:Class</span>=<span class="string">"HelloWorldDemo.MainWindow"</span></span></div><div class="line">        <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">        <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">        <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></div><div class="line">        <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></div><div class="line">        <span class="attr">xmlns:local</span>=<span class="string">"clr-namespace:HelloWorldDemo"</span></div><div class="line">        <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span></div><div class="line">        <span class="attr">Title</span>=<span class="string">"MainWindow"</span> <span class="attr">Height</span>=<span class="string">"450"</span> <span class="attr">Width</span>=<span class="string">"800"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span> </span></div><div class="line">                <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span> </div><div class="line">                <span class="attr">Content</span>=<span class="string">"Click Me"</span> </div><div class="line">                <span class="attr">Click</span>=<span class="string">"Button_Click"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></div></pre></td></tr></table></figure><p>在<code>MainWindow.xaml.cs</code>中填写<code>View</code>视图中<code>Button</code>的逻辑事件,这里，我们简单地将这个<code>Button</code>点击事件处理为弹出一个<code>Hello World！</code>的消息框。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System.Windows;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldDemo</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> Interaction logic for MainWindow.xaml</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            InitializeComponent();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></div><div class="line">        &#123;</div><div class="line">            MessageBox.Show(<span class="string">"Hello World!"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>打包前测试运行<br>在打包为<code>UWP</code>程序之前，我们执行上面新建的<code>WPF</code>程序，效果如图。<br><img src="https://i.loli.net/2018/06/02/5b12aaba26249.png" alt="测试运行"><br>正如我们所写的那样，点击这个<code>Button</code>，能弹出<code>Hello World！</code>的消息框了。</p></li><li>新建UWP打包项目<br>在当前的解决方案上右键<code>Add</code>-&gt;<code>New Project</code>,然后<code>Windows Universal</code>内容中选择<code>Windows Application Packaging Project</code>。<br><img src="https://i.loli.net/2018/06/02/5b12aca53b243.png" alt="新建打包项目"><br><img src="https://i.loli.net/2018/06/02/5b12ace115db1.png" alt="新建打包项目"><br>继续选择<code>Target version</code>和<code>Minimum version</code>，这里以最低<code>15063</code>，最高<code>17143</code>为例子，如果选择了系统中没有的<code>Windows SDK</code>的，会提示下载<code>SDK</code>。<br><img src="https://i.loli.net/2018/06/02/5b12adcd7f686.png" alt="SDK选择"></li><li>添加引用<br>在新建的<code>UWP</code>打包项目的<code>Applications</code>右键来添加同解决方案下WPF项目的引用。<br><img src="https://i.loli.net/2018/06/02/5b12ae604d876.png" alt="添加引用"><br><img src="https://i.loli.net/2018/06/02/5b12ae604f107.png" alt="添加引用"></li><li>设置入口点<br>将<code>Applicatons</code>下刚添加的引用设置为入口点。<br><img src="https://i.loli.net/2018/06/02/5b12af13b8997.png" alt="设置入口点"></li><li>重新构建<br>解决方案右键<code>Rebuild</code>启动重新构建，一般情况下没有出错即可。</li><li>创建App包<br>打包程序右键，<code>Store</code>-&gt;<code>Create App Packages...</code>,在弹出的对话框中选择打包为<code>Sideloading 旁加载</code><br><a href="https://i.loli.net/2018/06/21/5b2bb64932910.png" target="_blank" rel="external"><img src="https://i.loli.net/2018/06/21/5b2bb64932910.png" alt=""></a><br><a href="https://i.loli.net/2018/06/02/5b12b0b0866bb.png" target="_blank" rel="external"><img src="https://i.loli.net/2018/06/02/5b12b0b0866bb.png" alt=""></a><br>然后，等待打包完成。</li><li>UWP测试运行<br>在项目文件夹中<code>AppPackages</code>的<code>WapProjTemplate_1.0.0.0_Debug_Test</code>中可以看到，其中有<code>cer</code>证书文件，<code>appxbundle</code>UWP安装程序文件,<code>Add-AppDevPackage.ps1</code>PowerShell安装批处理，以及其他文件。<br><img src="https://i.loli.net/2018/06/02/5b12b20ecd6e2.png" alt="TIM截图20180602230434.png"><br>这里，右键这里<code>PowerShell</code>批处理文件，选择<code>使用PowerShell 运行</code>，安装过程中提示需要管理员权限，全部<code>Y</code>即可。<br><img src="https://i.loli.net/2018/06/02/5b12b20ed4c29.png" alt="TIM截图20180602230044.png"><br>安装完成后即可在开始菜单看到刚打包的UWP程序，点击运行。<br><img src="https://i.loli.net/2018/06/02/5b12b317a7251.png" alt="PowerShell 安装"><br>执行效果和之前运行的一样。</li></ol><p>参考文献：</p><ul><li>微软官方开发文档</li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Nginx 将网站完全重定向到'www'、'https']]></title>
      <url>https://www.mxvar.com/2018/03/03/nginx-redirect/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p><code>Nginx</code> (engine x) 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP/POP3/SMTP 服务器。</p></blockquote><h2 id="检查Nginx的版本"><a href="#检查Nginx的版本" class="headerlink" title="检查Nginx的版本"></a>检查<code>Nginx</code>的版本</h2><p>在服务器<code>Terminal</code>终端输入以下命令并回车：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -v</div></pre></td></tr></table></figure><p></p><p>本次测试的<code>Nginx</code>版本是：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx version: nginx/1.10.3 (Ubuntu)</div></pre></td></tr></table></figure><p></p><p>本次测试使用的是<code>Ubuntu</code>服务器。</p><h2 id="修改Nginx配置文件"><a href="#修改Nginx配置文件" class="headerlink" title="修改Nginx配置文件"></a>修改<code>Nginx</code>配置文件</h2><p>用<code>vim</code>打开<code>Nginx</code>的配置文件：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/nginx/sites-available/default</div></pre></td></tr></table></figure><p></p><p>同时需要输入<code>root</code>管理员密码。<br>如果我们要将带下面<code>host</code>的请求<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://mxvar.com</div><div class="line">http://www.mxvar.com/</div><div class="line">https://mxvar.com</div></pre></td></tr></table></figure><p></p><p>均重定向跳转到下面的<code>host</code>的请求上<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://www.mxvar.com</div></pre></td></tr></table></figure><p></p><p>也就是将所有不带<code>www</code>或<code>https</code>的请求均重定向跳转到既带<code>www</code>,又带<code>https</code>的请求上。</p><h3 id="合并80端口请求"><a href="#合并80端口请求" class="headerlink" title="合并80端口请求"></a>合并<code>80</code>端口请求</h3><p>将<code>www.mxvar.com</code>和<code>mxvar.com</code>合并在一起：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        listen [::]:80;</div><div class="line"></div><div class="line">        server_name mxvar.com,www.mxvar.com;</div><div class="line">        charset utf-8;</div><div class="line">        root &lt;your website directory&gt;;</div><div class="line">        index index.html;</div><div class="line">        <span class="built_in">return</span> 301 https://www.mxvar.com<span class="variable">$request_uri</span>;</div><div class="line">        location / &#123;</div><div class="line">                try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>将<code>root</code>后面修改为自己的网站文件根目录,在这里我们使用<code>301</code>来重定向请求。</p><h3 id="修改443端口请求"><a href="#修改443端口请求" class="headerlink" title="修改443端口请求"></a>修改<code>443</code>端口请求</h3><p>将默认的监听<code>443</code>端口的<code>server</code>的<code>server_name</code>的值改为带<code>www</code>的，同时另外新建一个监听<code>443</code>端口的<code>server</code>，此时，这个<code>server_name</code>的值为不带<code>www</code>的，分别具体如下：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 443 default_server ssl;</div><div class="line">    server_name  www.mxvar.com;</div><div class="line"><span class="comment"># 你的SSL详细配置</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 443;</div><div class="line">        server_name mxvar.com;</div><div class="line">        <span class="built_in">return</span> 301 https://www.mxvar.com<span class="variable">$request_uri</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里我们同样使用的<code>301</code>响应重定向。<br>使用<code>rewrite</code>也能达到同样的效果，但是，在性能上，使用<code>301</code>要比使用<code>rewrite</code>来实现要好很多。</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ASP.NET Core Web API使用EF Core Code First模式]]></title>
      <url>https://www.mxvar.com/2018/01/20/efcodefirst/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><h1 id="EF-Core-介绍"><a href="#EF-Core-介绍" class="headerlink" title="EF Core 介绍"></a>EF Core 介绍</h1><p><code>Entity Framework(EF) Core</code> 是<code>Entity Framework</code> 的一个轻量级和可扩展的版本。<code>EF Core</code> 是一个ORM(对象关系映射)，它使.NET开发人员可以直接使用.NET对象来操作数据库，消除了大部分的数据访问代码，开发通常只需要编写对象即可。<code>EF Core</code>支持多种数据库引擎，例如:</p><ul><li>Microsft SQL Server</li><li>SQLite</li><li>Npgsql</li><li>MySQL</li><li>Micosoft SQL Server Compact Edition</li><li>IBM Data Servers</li><li>InMemory</li></ul><h2 id="获取EF-Core"><a href="#获取EF-Core" class="headerlink" title="获取EF Core"></a>获取EF Core</h2><p>通过NuGet包管理器来获取需要使用的数据库支持，这里以SQL Server为例：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Install-Package Microsoft.EntityFrameworkCore.SqlServer</div></pre></td></tr></table></figure><p></p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p><code>EF Core</code>是通过一个模型进行数据访问的。模型由实体类和表示与数据库中的会话组成，允许你查询和保存数据派生的上下文。<br>可以从现有的数据库生成模型，也可以手工编写模型来匹配自己的数据库，或者使用 EF 迁移来完成从模型生成数据库，也就是<code>Database First</code>和<code>Code First</code>。<br>下面来写一个上下文(<code>Context</code>),添加<code>EFDbContext.cs</code>并添加如下语句:<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">EcustAPI.Models</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EFDbContext</span>: <span class="title">DbContext</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">EFDbContext</span>(<span class="params">DbContextOptions&lt;EFDbContext&gt; options</span>):<span class="title">base</span>(<span class="params">options</span>)</span></div><div class="line">        &#123; &#125;</div><div class="line">        <span class="keyword">public</span> DbSet&lt;Person&gt; Person &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>添加<code>Person.cs</code>并添加如下模型(<code>Model</code>):<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System.ComponentModel.DataAnnotations;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">EcustAPI.Models</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></div><div class="line">    &#123;</div><div class="line">        [Key]</div><div class="line">        <span class="keyword">public</span> <span class="keyword">int</span> PersonId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>在<code>Startup.cs</code>中配置数据库连接,在<code>ConfigureServices</code>方法中加入下面配置:<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">services.AddEntityFrameworkSqlServer()</div><div class="line">    .AddDbContext&lt;EFDbContext&gt;(</div><div class="line">    options =&gt; options.UseSqlServer(Configuration.GetConnectionString(<span class="string">"SqlServer"</span>)));</div></pre></td></tr></table></figure><p></p><p>在<code>appsettings.json</code>中加入数据库连接字符串,在根节点添加如下项:<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> "ConnectionStrings": &#123;</div><div class="line">  "SqlServer": "Data Source=***.database.windows.net;Initial Catalog=MSDataBase;Integrated Security=False;User ID=***;Password=***;Connect Timeout=30;Encrypt=True;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>上面的数据库字符串需要更换为自己的数据库连接字符串。</p><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p>实体类的实例可以使用语言集成查询(<code>LINQ</code>)在数据库中查询检索：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> ( <span class="keyword">var</span> db=<span class="keyword">new</span> EFDbContext())</div><div class="line">&#123;</div><div class="line">    <span class="keyword">var</span> person=db.Person</div><div class="line">       .Where(p=&gt;p.Age&gt;=<span class="number">18</span>)</div><div class="line">       .OderBy(b=&gt;b.PersonId)</div><div class="line">       .ToList();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h2><p>使用实体类的实例在数据库中添加数据：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> (<span class="keyword">var</span> db=<span class="keyword">new</span> EFDbContext())</div><div class="line">&#123;</div><div class="line">    <span class="keyword">var</span> person=<span class="keyword">new</span> Person&#123;</div><div class="line">        Name=<span class="string">"Mary"</span>,</div><div class="line">        Age=<span class="number">35</span></div><div class="line">    &#125;;</div><div class="line">    db.Person.Add(person);</div><div class="line">    db.SaveChanges();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h1 id="Code-First"><a href="#Code-First" class="headerlink" title="Code First"></a>Code First</h1><p>下面通过一个ASP.NET Core Web API的实例来使用学习<code>EF Core First</code>，也就是通过<code>EF</code>迁移来完成从模型生成数据库。<br>本实例使用下面环境：</p><ul><li>Microsoft Visual Studio Professional 2017 Version 15.5.4</li><li>.NET Core 2.0</li><li>SQL Server 2008</li></ul><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p>新建项目，选择<code>.NET Core</code>，然后选择<code>ASP.NET Core Web Application</code>,将其命名为<code>EFCoreDemo</code>。如下图所示：<br><img src="https://i.loli.net/2018/01/20/5a63086cce2ba.png" alt="1.png"><br>单击<code>OK</code>按钮以后，出现模板对话框；选择<code>Web API</code>模板，身份验证默认为<code>No Authentication</code>，上面的.NET Core版本选择为最新的版本，这里是<code>ASP.NET Core 2.0</code>，然后单击<code>OK</code>,Visual Studio开始自动创建模板文件。<br><img src="https://i.loli.net/2018/01/20/5a63098841116.png" alt="2.png"></p><h2 id="引用EF-Core"><a href="#引用EF-Core" class="headerlink" title="引用EF Core"></a>引用EF Core</h2><p>在项目右键，打开<code>NuGet</code>包管理器，搜索<code>Microsoft.EntityFrameworkCore.SqlServer</code>这个包，并安装它。如图所示：<br><img src="https://i.loli.net/2018/01/20/5a630b143af2f.png" alt="3.png"></p><h2 id="创建模型实体"><a href="#创建模型实体" class="headerlink" title="创建模型实体"></a>创建模型实体</h2><p>在项目中添加一个<code>Models</code>文件夹，然后在<code>Models</code>文件夹内通过右键快捷菜单新建一个类，这里命名为<code>Person.cs</code>，并在<code>Person.cs</code>中添加如下代码：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System.ComponentModel.DataAnnotations;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">EFCoreDmoe.Models</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></div><div class="line">    &#123;</div><div class="line">        [Key]</div><div class="line">        <span class="keyword">public</span> <span class="keyword">int</span> PersonId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>继续新建一个类<code>DataContext.cs</code>，添加上下文代码：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> Microsoft.EntityFrameworkCore;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">EFCoreDmoe.Models</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataContext</span>:<span class="title">DbContext</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DataContext</span>(<span class="params">DbContextOptions&lt;DataContext&gt; options</span>):<span class="title">base</span>(<span class="params">options</span>)</span>&#123; &#125;</div><div class="line">        <span class="keyword">public</span> DbSet&lt;Person&gt; Person &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>打开<code>Startup.cs</code>文件，在<code>ConfigureServices</code>添加如下代码：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></div><div class="line">&#123;</div><div class="line">    services.AddEntityFrameworkSqlServer()</div><div class="line">        .AddDbContext&lt;DataContext&gt;(</div><div class="line">             options =&gt; options.UseSqlServer(Configuration.GetConnectionString(<span class="string">"SqlServer"</span>)));</div><div class="line">    services.AddMvc();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>在<code>appsettings.json</code>中加入数据库连接字符串,在根节点添加如下项:<br></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> "ConnectionStrings": &#123;</div><div class="line">  "SqlServer": "Data Source=127.0.0.1;Initial Catalog=MyData;Persist Security Info=True;User ID=sa;Password=Sa1234"</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>在这里，使用的是本地数据库，数据库名称为<code>MyData</code>。<br>下面开始通过模型开始创建数据库，这里使用<code>dotnet ef</code>命令来进行迁移以及更新。<br>打开<code>Package Manager Console</code>窗口,首先输入<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Add-Migration Migrations</div></pre></td></tr></table></figure><p></p><p>没有报错，然后继续输入：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Update-Database</div></pre></td></tr></table></figure><p></p><p>提示<code>Done.</code>完成，然后我们打开数据库查看<code>EF Core</code>创建的数据库是不是符合我们的要求。<br><img src="https://i.loli.net/2018/01/20/5a6314ea2a8e7.png" alt="TIM截图20180120180641.png"><br>嗯，对，符合我们的要求，<code>PersonId</code>作为主键，并且是从1开始自增的。<br>我们先通过SQL语句插入几条数据。<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span>  MyData.dbo.Person(<span class="keyword">Name</span>,Age)<span class="keyword">Values</span> (<span class="string">'Tom'</span>,<span class="number">22</span>)</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span>  MyData.dbo.Person(<span class="keyword">Name</span>,Age)<span class="keyword">Values</span> (<span class="string">'Jack'</span>,<span class="number">21</span>)</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span>  MyData.dbo.Person(<span class="keyword">Name</span>,Age)<span class="keyword">Values</span> (<span class="string">'Mary'</span>,<span class="number">18</span>)</div></pre></td></tr></table></figure><p></p><p>查看下已经插入的数据：<br><img src="https://i.loli.net/2018/01/20/5a63162a1fdd4.png" alt="4.png"></p><h2 id="项目使用"><a href="#项目使用" class="headerlink" title="项目使用"></a>项目使用</h2><p>在<code>Controllers</code>文件夹上右键，<code>Add</code>-&gt;<code>Controller</code>，因为我们的项目是<code>Web API</code>,所以选择<code>API Controller with actions,using Entity Framework</code>,单击<code>Add</code>,在弹出的窗口中，<code>Model class</code>下拉框选择之前我们新建的实体类<code>Person (EFCoreDmoe.Models)</code>,<code>Data context class</code>下拉框选择之前我们给实体类建立的上下文<code>DataContext (EFCoreDmoe.Models)</code>，<code>Controller name</code>自动为我们生成了实体类名的复数形式<code>PeopleController</code>(感谢宇宙第一IDE——Visual Studio)，我们就不修改了，直接点击<code>Add</code>即可。<br><img src="https://i.loli.net/2018/01/20/5a6318983a908.png" alt="5.png"><br>VS自动给我们配置好了路由，所以，我们直接点击<code>IIS Express</code>启动调试即可，因为访问的默认的路由是<code>ValueController</code>，不出问题的话，我们访问<code>people</code>控制器<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:62438/api/people</div></pre></td></tr></table></figure><p></p><p>将上面的端口号替换为自己的端口号即可。结果如图：<br><img src="https://i.loli.net/2018/01/20/5a6319dc439e2.png" alt="6.png"><br>教程结束。<br>参考书籍：</p><ul><li>《ASP.NET Core 跨平台开发从入门到实战》 张剑桥 编著 2017年5月第1版</li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决Windows 10 spotlight锁屏壁纸不更新问题]]></title>
      <url>https://www.mxvar.com/2018/01/15/recover-spotlight/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>不知从什么时候开始，我的PC设置的 Spotlight 壁纸突然就是不更新了，一直是默认图片，尝试过将Spotlight的图片文件夹删除也没能恢复更新，后面想到之前遇到过Windows 10 <code>照片</code>应用不能正常工作，自己是通过重装这个应用解决的，然后尝试重装<code>Spotlight</code>这个应用来试试.</p></blockquote><ol><li><p>按<code>Windows</code>+<code>S</code>后输入<code>Windows powershell</code>,右键选择管理员运行。<br><img src="https://i.loli.net/2018/01/15/5a5c68789bb1d.png" alt="1.png"></p></li><li><p>在<code>PowerShell</code>中输入下面命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Get-AppxPackage –alluser</div></pre></td></tr></table></figure><p>在列表中找到<code>Name</code>为<code>Microsoft.Windows.ContentDeliveryManager</code>的包名，记录下这个包名的<code>InstallLocation</code>的值，在这里，它的值为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Windows\SystemApps\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy</div></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/01/15/5a5c69a5dd94a.png" alt="2.png"></p></li><li><p>接着下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Add-AppxPackage –disabledevelopment –register [installlocation]\Appxmanifest.xml</div></pre></td></tr></table></figure><p>将其中的<code>installlocation</code>更换为上面记录的值，那么，替换后的命令为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Add-AppxPackage –disabledevelopment –register C:\Windows\SystemApps\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\Appxmanifest.xml</div></pre></td></tr></table></figure><p>回车，然后再进设置将锁屏壁纸重新设为锁屏聚焦，重启电脑即可恢复正常。<br><img src="https://i.loli.net/2018/01/15/5a5c6b51841bd.png" alt="3.png"></p></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[WPF使用MahApps.Metro UI库]]></title>
      <url>https://www.mxvar.com/2018/01/10/wpf_mahapps_metro/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>MahApps.Metro是Paul Jenkins在2011年开始的一个项目，它是一种将Metro风格的用户界面引入WPF应用程序的简单方法。</p></blockquote><p>本文将向您介绍MahApps.Metro的工作原理以及如何将其整合到WPF应用程序中。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>新建一个WPF解决方案:<br><img src="https://i.loli.net/2018/01/10/5a55cdce75772.png" alt="1.png"><br>在Visual Studio 中通过 NuGet 包管理器来安装MahApps.Metro:<br><img src="https://i.loli.net/2018/01/10/5a55cdee31d8d.png" alt="2.png"></p><h1 id="修改-XAML-文件"><a href="#修改-XAML-文件" class="headerlink" title="修改 XAML 文件"></a>修改 XAML 文件</h1><p>在安装了MahApps.Metro之后:</p><ol><li>打开<code>MainWindow.xaml</code>文件</li><li>将下面的属性添加到打开的<code>Windows</code>标签中(引入命名空间):<br><code>xmlns:Controls=&quot;clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro&quot;</code><br>或者<br><code>xmlns:Controls=&quot;http://metro.mahapps.com/winfx/xaml/controls&quot;</code></li><li>将<code>&lt;Window&gt;</code>标签修改为<code>&lt;Controls:MetroWindow&gt;</code>标签<br>效果如图:<br><img src="https://i.loli.net/2018/01/10/5a55cfa4e8b3e.png" alt="3.png"><br>代码如下:<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Controls:MetroWindow</span> <span class="attr">x:Class</span>=<span class="string">"MahAppDemo.MainWindow"</span></span></div><div class="line">        <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">        <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">        <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></div><div class="line">        <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></div><div class="line">        <span class="attr">xmlns:local</span>=<span class="string">"clr-namespace:MahAppDemo"</span></div><div class="line">        <span class="attr">xmlns:Controls</span>=<span class="string">"http://metro.mahapps.com/winfx/xaml/controls"</span></div><div class="line">        <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span></div><div class="line">        <span class="attr">Title</span>=<span class="string">"MainWindow"</span> <span class="attr">Height</span>=<span class="string">"350"</span> <span class="attr">Width</span>=<span class="string">"525"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Controls:MetroWindow</span>&gt;</span></div></pre></td></tr></table></figure></li></ol><h1 id="修改后台代码"><a href="#修改后台代码" class="headerlink" title="修改后台代码"></a>修改后台代码</h1><p>打开<code>MainWindow.xaml.cs</code>文件，添加<code>using MahApps.Metro.Controls;</code>的引用，同时将基类<code>Window</code>改为<code>MetroWindow</code>:<br><img src="https://i.loli.net/2018/01/10/5a55d0e8ce33c.png" alt="7.png"><br>代码如下:<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> MahApps.Metro.Controls;</div><div class="line"></div><div class="line"><span class="keyword">namespace</span> <span class="title">MahAppDemo</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> Interaction logic for MainWindow.xaml</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span>: <span class="title">MetroWindow</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            InitializeComponent();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>或者直接去掉基类<code>Window</code>即可:<br><img src="https://i.loli.net/2018/01/10/5a55d116c7399.png" alt="4.png"><br>代码如下：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">namespace</span> <span class="title">MahAppDemo</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">    <span class="comment"><span class="doctag">///</span> Interaction logic for MainWindow.xaml</span></div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span></div><div class="line">    &#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></div><div class="line">        &#123;</div><div class="line">            InitializeComponent();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h1 id="引入资源样式"><a href="#引入资源样式" class="headerlink" title="引入资源样式"></a>引入资源样式</h1><p>打开<code>App.xaml</code>文件:<br>在<code>&lt;Application.Resources&gt;</code>内添加<code>&lt;ResourceDictionary&gt;</code>，代码如下:<br></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Application</span> <span class="attr">x:Class</span>=<span class="string">"MahAppDemo.App"</span></span></div><div class="line">             <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">             <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">             <span class="attr">xmlns:local</span>=<span class="string">"clr-namespace:MahAppDemo"</span></div><div class="line">             <span class="attr">StartupUri</span>=<span class="string">"MainWindow.xaml"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">"pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">"pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">"pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml"</span> /&gt;</span></div><div class="line">                <span class="comment">&lt;!-- Accent and AppTheme setting --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">"pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml"</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">"pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></div></pre></td></tr></table></figure><p></p><h1 id="启动验证"><a href="#启动验证" class="headerlink" title="启动验证"></a>启动验证</h1><p>在<code>MainWindow.xaml</code>中添加一些控件测试:<br></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Controls:MetroWindow</span> <span class="attr">x:Class</span>=<span class="string">"MahAppDemo.MainWindow"</span></span></div><div class="line">        <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></div><div class="line">        <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></div><div class="line">        <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></div><div class="line">        <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></div><div class="line">        <span class="attr">xmlns:local</span>=<span class="string">"clr-namespace:MahAppDemo"</span></div><div class="line">        <span class="attr">xmlns:Controls</span>=<span class="string">"http://metro.mahapps.com/winfx/xaml/controls"</span></div><div class="line">        <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span></div><div class="line">        <span class="attr">Title</span>=<span class="string">"MainWindow"</span> <span class="attr">Height</span>=<span class="string">"350"</span> <span class="attr">Width</span>=<span class="string">"525"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Label</span> <span class="attr">Margin</span>=<span class="string">"20"</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">Label</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">TextBox</span>&gt;</span><span class="tag">&lt;/<span class="name">TextBox</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Button</span>&gt;</span>Click Me<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Controls:MetroWindow</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>启动效果图：<br><img src="https://i.loli.net/2018/01/10/5a55d2e79f0be.png" alt="6.png"><br>最后附上MahApps.Metro UI的官网:<a href="http://mahapps.com/" target="_blank" rel="external">http://mahapps.com/</a>，GitHub地址:<a href="https://github.com/MahApps/MahApps.Metro" target="_blank" rel="external">https://github.com/MahApps/MahApps.Metro</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[npm 官方源替换为淘宝源]]></title>
      <url>https://www.mxvar.com/2018/01/07/npm-registry/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>因为npm的官方源服务器在国外，所以对于中国的开发者来说，通过npm安装package不修改源将会是件很痛苦的事情。</p></blockquote><p>有三种方法来设置npm源:</p><h2 id="通过命令行设置"><a href="#通过命令行设置" class="headerlink" title="通过命令行设置"></a>通过命令行设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm --registry https://registry.npm.taobao.org info underscore</div></pre></td></tr></table></figure><h2 id="通过config设置"><a href="#通过config设置" class="headerlink" title="通过config设置"></a>通过config设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</div></pre></td></tr></table></figure><h2 id="修改-npmrc文件设置"><a href="#修改-npmrc文件设置" class="headerlink" title="修改.npmrc文件设置"></a>修改.npmrc文件设置</h2><p>在<code>~/.npmrc</code>文件中加入以下内容:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">registry = https://registry.npm.taobao.org</div></pre></td></tr></table></figure><p></p><h2 id="检查设置结果"><a href="#检查设置结果" class="headerlink" title="检查设置结果"></a>检查设置结果</h2><p>在命令行键入:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm get registry</div></pre></td></tr></table></figure><p></p><p>将会显示npm源:<br><img src="https://i.loli.net/2018/01/07/5a5230ebb6d65.png" alt="npm结果"></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu软件源更换为国内源]]></title>
      <url>https://www.mxvar.com/2017/08/26/ubuntusources/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>Ubuntu默认的软件源是Ubuntu自己的服务器，那么，由于你懂得的原因，国内访问这个软件源速度及其缓慢。</p></blockquote><h2 id="备份原来的源文件"><a href="#备份原来的源文件" class="headerlink" title="备份原来的源文件"></a>备份原来的源文件</h2><ul><li><p>首先，进入源<code>sources.list</code>所在的目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /etc/apt/</div></pre></td></tr></table></figure></li><li><p>然后执行备份指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp sources.list sources.list.bak</div></pre></td></tr></table></figure><p>期间需要输入超级用户root的密码。</p></li></ul><h2 id="修改源文件的内容"><a href="#修改源文件的内容" class="headerlink" title="修改源文件的内容"></a>修改源文件的内容</h2><ul><li><p>通过以下指令打开<code>sources.list</code>文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim sources.list</div></pre></td></tr></table></figure></li><li><p>然后将<code>sources.list</code>文件内容替换为下面的阿里源内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#deb包</span></div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse  </div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse  </div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse  </div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse  </div><div class="line"><span class="comment">##测试版源  </span></div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse  </div><div class="line"><span class="comment"># 源码  </span></div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse  </div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse  </div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse  </div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse  </div><div class="line"><span class="comment">##测试版源  </span></div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse  </div><div class="line"><span class="comment"># Canonical 合作伙伴和附加  </span></div><div class="line">deb http://archive.canonical.com/ubuntu/ xenial partner  </div><div class="line">deb http://extras.ubuntu.com/ubuntu/ xenial main</div></pre></td></tr></table></figure><p>或者下面的腾讯源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">deb-src http://mirrors.tencentyun.com/old-archives/ubuntu lucid main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tencentyun.com/old-archives/ubuntu lucid-updates main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tencentyun.com/old-archives/ubuntu lucid-security main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tencentyun.com/old-archives/ubuntu lucid-backports main restricted universe multiverse</div><div class="line">deb http://mirrors.tencentyun.com/old-archives/ubuntu lucid main restricted universe multiverse</div><div class="line">deb http://mirrors.tencentyun.com/old-archives/ubuntu lucid-updates main restricted universe multiverse</div><div class="line">deb http://mirrors.tencentyun.com/old-archives/ubuntu lucid-security main restricted universe multiverse</div><div class="line">deb http://mirrors.tencentyun.com/old-archives/ubuntu lucid-backports main restricted universe multiverse</div></pre></td></tr></table></figure><p>或者下面的网易源:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse</div><div class="line">deb http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse</div><div class="line">deb http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse</div><div class="line">deb http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse</div><div class="line">deb http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse</div><div class="line">deb-src http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse</div><div class="line">deb-src http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse</div><div class="line">deb-src http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse</div><div class="line">deb-src http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse</div></pre></td></tr></table></figure><p>或者下面的中科大源:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div></pre></td></tr></table></figure><p>最后输入<code>:qw</code>保存退出。</p></li></ul><h2 id="更新软件列表和已安装的软件"><a href="#更新软件列表和已安装的软件" class="headerlink" title="更新软件列表和已安装的软件"></a>更新软件列表和已安装的软件</h2><ul><li><p>使用下面的指令来更新获取阿里源提供的软件列表:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt update</div></pre></td></tr></table></figure></li><li><p>使用下面的指令来更新软件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt upgrade</div></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[更改Windows CMD以及Powershell字体为Consolas]]></title>
      <url>https://www.mxvar.com/2017/08/25/cmdfont/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>CMD是Command的缩写.即命令提示符（CMD），是在OS / 2 ， Windows CE与Windows NT平台为基础的操作系统（包括Windows 2000和XP中， Vista中，和Server 2003 ）下的“MS-DOS 方式”。中文版Windows XP 中的命令提示符进一步提高了与DOS 下操作命令的兼容性，用户可以在命令提示符直接输入中文调用文件,微软在Windows 7及之后引入了Powershell——一款比CMD更加强大的命令工具。</p></blockquote><p>中文版Windows 10操作系统的CMD以及Powershell界面默认的字体是新宋体，对于写代码的人来说，看新宋体下的英文相当难受，还是看微软自带的<code>Consolas</code>看起来舒服。<br><a href="https://i.loli.net/2017/08/26/59a16f6ae1b6a.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/26/59a16f6ae1b6a.png" alt="1.png"></a><br><a href="https://i.loli.net/2017/08/26/59a16f6c97245.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/26/59a16f6c97245.png" alt="2.png"></a><br>在Windows 7之前的系统中，可以直接更改CMD的字符编码，但是在Windows 10中已经不能直接更改字符编码了。<br>那么，我们只能通过更改注册表的方式来修改<code>CMD</code> 和<code>Powershell</code>字符编码。</p><h3 id="注册表修改字符编码"><a href="#注册表修改字符编码" class="headerlink" title="注册表修改字符编码"></a>注册表修改字符编码</h3><ol><li>按<code>Windows</code>+<code>R</code>进入<code>Run</code>,输入<code>regedit</code>,回车进入注册表。<br><a href="https://i.loli.net/2017/08/26/59a16f6e84577.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/26/59a16f6e84577.png" alt="3.png"></a></li><li><p>在注册表地址栏输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HKEY_CURRENT_USER\Console\%SystemRoot%_system32_cmd.exe</div></pre></td></tr></table></figure></li><li><p>回车后双击右边的<code>CodePage</code>这一注册表项，勾选<code>Base</code>中的<code>Decimal</code>一项(目的是将数值以十进制显示)，然后将<code>Value data</code>中的数值改为<code>437</code>，确认后再打开<code>CMD</code>，右键标题栏，选择<code>属性</code>，选择<code>字体</code>,将字体改为<code>Consolas</code>,保存后字体就变成了<code>Consolas</code>了。<br><a href="https://i.loli.net/2017/08/26/59a16f705fefc.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/26/59a16f705fefc.png" alt="4.png"></a><br>对于<code>Powershell</code>,在注册表地址栏输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Computer\HKEY_CURRENT_USER\Console\%SystemRoot%_System32_WindowsPowerShell_v1.0_powershell.exe</div></pre></td></tr></table></figure><p>同样将<code>CodePage</code>中的数值改为<code>437</code>,保存即可。<br><a href="https://i.loli.net/2017/08/26/59a16f728be26.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/26/59a16f728be26.png" alt=""></a></p></li></ol><p>最终的效果图<br><a href="https://i.loli.net/2017/08/26/59a16f7402111.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/26/59a16f7402111.png" alt="6.png"></a></p><p>P.S.MS-DOS为以下国家和语言提供字符集：</p><table><thead><tr><th>代码</th><th>描述</th></tr></thead><tbody><tr><td>65001</td><td>UTF-8字符集</td></tr><tr><td>1258</td><td>越南语</td></tr><tr><td>1257</td><td>波罗的语</td></tr><tr><td>1256</td><td>阿拉伯语</td></tr><tr><td>1255</td><td>希伯来语</td></tr><tr><td>1254</td><td>土耳其语</td></tr><tr><td>1253</td><td>希腊语</td></tr><tr><td>1252</td><td>拉丁 1 字符 (ANSI)</td></tr><tr><td>1251</td><td>西里尔语</td></tr><tr><td>1250</td><td>中欧语言</td></tr><tr><td>950</td><td>繁体中文</td></tr><tr><td>949</td><td>朝鲜语</td></tr><tr><td>936</td><td>简体中文（默认）</td></tr><tr><td>932</td><td>日语</td></tr><tr><td>874</td><td>泰国语</td></tr><tr><td>866</td><td>俄文</td></tr><tr><td>850</td><td>多语种 (MS-DOS Latin1)</td></tr><tr><td>437</td><td>MS-DOS 美国英语</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Fiddler抓包拦截用户请求、伪造表单数据]]></title>
      <url>https://www.mxvar.com/2017/08/12/fiddler/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>Fiddler是位于客户端和服务器端的HTTP代理，也是目前最常用的http抓包工具之一 。 它能够记录客户端和服务器之间的所有 HTTP请求，可以针对特定的HTTP请求，分析请求数据、设置断点、调试web应用、修改请求的数据，甚至可以修改服务器返回的数据，功能非常强大，是web调试的利器。</p></blockquote><h1 id="使用右键编辑Request"><a href="#使用右键编辑Request" class="headerlink" title="使用右键编辑Request"></a>使用右键编辑Request</h1><h2 id="选择需要重新发送执行的Request请求"><a href="#选择需要重新发送执行的Request请求" class="headerlink" title="选择需要重新发送执行的Request请求"></a>选择需要重新发送执行的Request请求</h2><p>这里以<code>www.baidu.com</code> 搜索为例子，我们一开始的搜索内容是<code>测试</code>，然后我们需要编辑此次Request请求，修改表单其中的<code>wd</code>的键值，然后继续提交表单请求：<br><a href="https://i.loli.net/2017/08/12/598f093895350.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f093895350.png" alt="8.png"></a></p><h2 id="修改表单内容"><a href="#修改表单内容" class="headerlink" title="修改表单内容"></a>修改表单内容</h2><p>右键点击需要修改的Request，<code>Replay</code>-&gt;<code>Reissue and Edit</code>,右侧栏选择<code>Inspectors</code>，然后修改<code>QueryString</code>栏目下面的<code>wd</code>右边的内容，我们这里改为<code>游戏</code>这个关键词。<br><a href="https://i.loli.net/2017/08/12/598f05f173d97.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f05f173d97.png" alt=""></a><br><a href="https://i.loli.net/2017/08/12/598f06b94a7dd.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f06b94a7dd.png" alt="TIM截图20170812213147.png"></a></p><h2 id="提交表单内容"><a href="#提交表单内容" class="headerlink" title="提交表单内容"></a>提交表单内容</h2><p>点击下面的<code>Run to Completion</code>来提交修改后的请求，我们可以看到返回的信息已经成了<code>游戏</code>的搜索内容了。<br><a href="https://i.loli.net/2017/08/12/598f06735da69.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f06735da69.png" alt="3.png"></a></p><h1 id="使用bpu命令拦截"><a href="#使用bpu命令拦截" class="headerlink" title="使用bpu命令拦截"></a>使用bpu命令拦截</h1><p>更加好的方式是使用bpu命令拦截特定网址前缀的请求，当需要拦截的网址前缀到达Fiddler的代理服务器时，会自动拦截下来，此时，请求停止发送，Fiddle会在任务栏闪动提示用户进一步操作。<br>这里仍然以<code>www.baidu.com</code>搜索为例：</p><h2 id="使用命令定制拦截需求"><a href="#使用命令定制拦截需求" class="headerlink" title="使用命令定制拦截需求"></a>使用命令定制拦截需求</h2><p>在左侧栏的下面的黑色输入框输入一下命令<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bpu www.baidu.com</div></pre></td></tr></table></figure><p></p><p><a href="https://i.loli.net/2017/08/12/598f069687b7c.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f069687b7c.png" alt="5.png"></a><br>其含义是指拦截以<code>wwww.baidu.com</code>开头的所有请求，需要清除拦截规则的话，命令栏直接输入<code>bpu</code>回车即可。<br>网页端输入<code>测试</code>这个关键词，然后点击搜索，Fiddler此时会变红，是在提示需要用户进一步的操作。</p><h2 id="修改表单内容-1"><a href="#修改表单内容-1" class="headerlink" title="修改表单内容"></a>修改表单内容</h2><p>然后在右侧栏选择<code>Inspectors</code>，然后修改<code>QueryString</code>栏目下面的<code>wd</code>右边的内容，我们这里改为<code>游戏</code>这个关键词。<br><a href="https://i.loli.net/2017/08/12/598f06b94a7dd.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f06b94a7dd.png" alt="TIM截图20170812213147.png"></a></p><h2 id="提交表单内容-1"><a href="#提交表单内容-1" class="headerlink" title="提交表单内容"></a>提交表单内容</h2><p>点击下面的<code>Run to Completion</code>来提交修改后的请求，我们可以看到返回的信息已经成了<code>游戏</code>的搜索内容了，而搜索框仍然是修改请求之前的<code>测试</code>关键词。<br><a href="https://i.loli.net/2017/08/12/598f06daa305f.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f06daa305f.png" alt="6.png"></a><br>P.S. 最后给一个修改了微博iPhone 客户端的UA的效果图，测试设备是iPhone 6s,拦截发微博时的Request请求，修改其中的UA为<code>iPhone 9,2</code>(这是iPhone 7 Plus的机型识别型号),然后提交请求即可。<br><a href="https://i.loli.net/2017/08/12/598f06eb2b0ac.png" target="_blank" rel="external"><img src="https://i.loli.net/2017/08/12/598f06eb2b0ac.png" alt="7.png"></a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Nginx启用HSTS使浏览器强制跳转HTTS访问]]></title>
      <url>https://www.mxvar.com/2017/08/06/addhsts/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>在网站全站HTTPS后，如果用户手动敲入网站的HTTP地址，或者从其它地方点击了网站的HTTP链接，通常依赖于服务器端的301/302重定向跳转才能使用HTTPS服务。而第一次的HTTP请求就有可能被劫持，导致请求无法到达服务器，从而构成HTTPS降级劫持。这个问题目前可以通过HSTS(HTTP Strict Transport Security，RFC6797)来解决。</p></blockquote><h2 id="HSTS简介"><a href="#HSTS简介" class="headerlink" title="HSTS简介"></a>HSTS简介</h2><p>HSTS(HTTP Strict Transport Security)是国际互联网工程组织IETF发布的一种互联网安全策略机制。采用HSTS策略的网站将保证浏览器始终连接到该网站的HTTPS加密版本，不需要用户手动在URL地址栏中输入加密地址，以减少会话劫持风险。</p><h2 id="HSTS响应头格式"><a href="#HSTS响应头格式" class="headerlink" title="HSTS响应头格式"></a>HSTS响应头格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Strict-Transport-Security: max-age=expireTime [; includeSubDomains] [; preload]</div></pre></td></tr></table></figure><h2 id="在Nginx启用HSTS"><a href="#在Nginx启用HSTS" class="headerlink" title="在Nginx启用HSTS"></a>在Nginx启用HSTS</h2><p>打开<code>vim /etc/nginx/sites-available/default</code>,在<code>server</code>中的443端口添加<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">add_header Strict-Transport-Security <span class="string">"max-age=63072000; includeSubdomains; preload"</span>;</div></pre></td></tr></table></figure><p></p><p><img src="https://i.loli.net/2017/08/06/598714c7a35c0.png" alt="TIM截图20170806210758.png"></p><h2 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启Nginx</h2><p>最后重启Nginx即可。<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nginx restart</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu添加系统调用]]></title>
      <url>https://www.mxvar.com/2017/06/22/linuxsyscall/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>系统调用（System Call）是操作系统为在用户态运行的进程与硬件设备（如CPU、磁盘、打印机等）进行交互提供的一组接口。当用户进程需要发生系统调用时，CPU 通过软中断切换到内核态开始执行内核系统调用函数.</p></blockquote><p>我们需要完成：</p><ul><li>下载最新版本的Linux内核源代码，在Linux系统中解压缩，大致观察内核源代码的组成结构。然后编译这个版本的内核代码，并尝试用编译出的内核重新引导系统。</li><li>添加一个新的系统调用，完成任意一个功能，重新编译和运行内核，使新的系统调用可用。</li><li>编写一个用户态的程序，使用增加的系统调用，以证明它确实可以用。</li></ul><p>开发环境：</p><ul><li>Linux 发行版 Ubuntu 16.10</li><li>VMware Workstation Pro 12.6</li><li>Linux 内核版本 4.11.6</li><li>虚拟机分配内存：4GB</li><li>虚拟机分配空间：50GB SSD</li></ul><ol><li>在VMware Workstation上安装Ubuntu 16.10;<br><img src="https://ooo.0o0.ooo/2017/06/22/594bdd7181874.png" alt="1.png"></li><li><p>进入Ubuntu系统，更新软件源代码.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install update</div></pre></td></tr></table></figure></li><li><p>下载编译过程中的所需的软件依赖包.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libncurses5-dev libssl-dev  </div><div class="line">sudo apt-get install build-essential openssl  </div><div class="line">sudo apt-get install zlibc minizip  </div><div class="line">sudo apt-get install libidn11-dev libidn11</div></pre></td></tr></table></figure><p>依赖包说明：</p><ul><li>libncurses5-dev :主要是在make menuconfig时能够出现图形化的选择菜单所依赖的的库</li><li>libssl-dev : openssl的依赖包</li><li>build-essential：建立debian软件包的工具</li><li>openssl ：涉及到系统安全的编译过程中的相关程序的依赖库</li><li>zlibc ：允许运行中的文件能够实现解压缩数据文件的一个工具</li><li>minizip ：是一个轻量级的支持库，能够支持压缩、提取、查看和操作ZIP文件。该软件包包括minizip和miniunzip工具</li><li>libidn11-dev ： 涉及到系统帮助等文档以及软件库等信息的一个软件包</li></ul></li><li><p>通过git下载Linux 内核 4.11.6.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git</div></pre></td></tr></table></figure></li><li><p>以root管理权限解压内核到 <code>/usr/src/</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo <span class="built_in">cd</span> /usr/src</div><div class="line">sudo tar -xvf linux-4.11.6.tar.xz</div></pre></td></tr></table></figure></li><li><p>Ubuntu安装Vim编辑器.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install vim</div></pre></td></tr></table></figure></li><li><p>用Vim打开<code>/kernel/sys.c</code>文件，加入<code>linkage.h</code>的头文件,在文件末尾加入要加入的系统调用函数.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim linux-4.11.6/kernel/sys.c</div></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2017/06/22/594bdfb9b158e.png" alt="2.png"><br><img src="https://ooo.0o0.ooo/2017/06/22/594bdfbd40447.png" alt="3.png"></p></li><li><p>加入系统调用函数声明。在<code>linux-4.11.6/arch/x86/include/asm/syscalls.h</code> 中加入<code>asmlinkage void sys_quicksort(int [],int,int);</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim linux-4.11.6/arch/x86/include/asm/syscalls.h</div></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2017/06/22/594be0913a9c5.png" alt="4.png"></p></li><li><p>加入系统调用号。在<code>linux-4.11.6/arch/x86/entry/syscalls/syscall_64.tbl</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim linux-4.11.6/arch/x86/entry/syscalls/syscall_64.tbl</div></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2017/06/22/594be091da76b.png" alt="5.png"></p></li><li><p>编译内核和安装内核.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo make mrproper  </div><div class="line">sudo make clean  </div><div class="line">sudo make menuconfig</div></pre></td></tr></table></figure></li><li><p>根据自己处理器的最大线程数目来编译.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo make -j4</div></pre></td></tr></table></figure></li><li><p>编译后安装内核到系统中.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo make modules_install  </div><div class="line">sudo make install</div></pre></td></tr></table></figure></li><li><p>重启加载内核.<br><img src="https://ooo.0o0.ooo/2017/06/22/594be09325d90.png" alt="6.png"></p></li><li><p>编写程序验证系统调用.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> QUICK_SORT 334</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i,a[]=&#123;<span class="number">9</span>,<span class="number">20</span>,<span class="number">36</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>&#125;;</div><div class="line">    syscall(QUICK_SORT,a,<span class="number">0</span>,<span class="number">9</span>);</div><div class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(“%d\t”,a[i]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>编译C程序:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> gcc -o <span class="built_in">test</span> test.c</div><div class="line">./<span class="built_in">test</span></div></pre></td></tr></table></figure><p><img src="https://ooo.0o0.ooo/2017/06/22/594be094d8e0b.png" alt="7.png"></p></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Google Chrome被劫持事件]]></title>
      <url>https://www.mxvar.com/2017/05/19/indexpage/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>今天打开Chrome浏览器，发现Chrome浏览器的主页被重定向到了垃圾网站<code>hao123</code>去了，作为一名程序员，最可耻这种未经用户允许就篡改主页来赚取流量的行为！再说了，这种垃圾网站怎么能作为首页呢？</p></blockquote><p>反复调查得知，Chrome浏览器不是直接被更改掉了主页，而是在快捷启动的<code>目标</code>一栏中加入了参数，导致每次通过快捷方式启动Chrome浏览器的时候，浏览器会首先访问加入参数的网站，如图所示：<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efgy1ffqy6ak3z3j20c30j2my6.jpg" alt=""><br>可以很清楚的看到启动参数后面被加入了<code>http://hao643.com</code>这个网站，去<code>Whois</code>上查询了这个域名的信息：<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efgy1ffqyadhqhij20od0cigml.jpg" alt=""><br>然后又顺手查了下这个<code>HICHINA ZHICHENG TECHNOLOGY LTD.</code>的信息，发现很早就有人就揭露这个公司喜欢篡改用户主页来赚取巨额流量的丑恶行径。<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efly1ffqyd34ionj20lf0ef404.jpg" alt=""><br>再一次鄙视(╬▔皿▔)凸这种恶心行为。<br>原以为解决方法是删除<code>目标</code>后面的启动参数就行了，然而，万万没想到的是：电脑一重启，那个Chrome的快捷方式又被篡改了，真是好气啊！<br>然后我又查看了系统的启动项、当前运行的服务以及系统的计划任务，均没有发现可疑的进程。<br>最后想想是不是每次开机的时候系统都会执行某个脚本来篡改快捷方式呢？因为这种方式极为隐蔽，脚本一被执行，就看不到任何的信息。</p><h2 id="下载WMI-Event-Viewer"><a href="#下载WMI-Event-Viewer" class="headerlink" title="下载WMI Event Viewer"></a>下载WMI Event Viewer</h2><p>WMI tools：微软官方出的系统检测工具。WMI工具包括：WMI CIM Studio：查看和编辑类，属性，限定词和在CIM储存库的实例;选定的运行方式;生成并编译MOF文件。 WMI对象浏览器：视图对象，编辑属性值和限定词和运行方法。<br>这个软件网上很容易找到，这里就不提供了。<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efgy1ffqypcik4wj206a03ajre.jpg" alt=""></p><h2 id="删除恶意脚本"><a href="#删除恶意脚本" class="headerlink" title="删除恶意脚本"></a>删除恶意脚本</h2><ol><li>以管理员方式启动<code>WMI Event Viewer</code>(否则后面无法进行删除操作)，点击左上角的<code>Register for Events</code>;<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efgy1ffqysqrr52j20gh09yglo.jpg" alt=""></li><li>在<code>Connect to namespace:</code>窗口中点击<code>OK</code>,默认不用输入密码，继续点击<code>OK</code>;<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efly1ffqyy7yvcoj20hm09cwen.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/mw690/9907b0efly1ffqyyl34y7j20hm09cwer.jpg" alt=""></li><li>点击<code>EventFilter.Name=&#39;VBScriptLKLive_filter&#39;</code>这一栏<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efly1ffqz1fuh0lj20hm09ct8v.jpg" alt=""><br>查看这个<code>VB</code>脚本的信息，如图：<br><img src="https://ws1.sinaimg.cn/mw690/9907b0efly1ffqz2g9zb1j20p50hdjsh.jpg" alt=""><br>从图中可以很清晰的看出，的确是这个脚本篡改了浏览器的快捷方式，那么，我们只要回到上一个窗口，删除这个脚本即可解决问题。</li></ol><h2 id="重启验证"><a href="#重启验证" class="headerlink" title="重启验证"></a>重启验证</h2><p>高兴的是，重启后，Chrome的快捷方式没有再被篡改了。<br>P.S. 这个示例告诉我们一定要从正规的网站下载软件，千万不要运行来历不明的软件。</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决fontawesome-webfont.woff2 404问题]]></title>
      <url>https://www.mxvar.com/2017/05/18/font404/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><h2 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h2><p><img src="https://ws1.sinaimg.cn/large/9907b0efgy1ffpwjhd9aqj20he067mx5.jpg" alt=""><br>如图所示，每次加载服务器上的<code>fontawesome-webfont.woff2</code>字体时，直接报<code>404(Not Found)</code>的错误，然而进入服务器发现这个字体是存在的，后来发现原来是<code>IIS</code>服务器的不认<code>woff2</code>格式的文件。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>找到出错的原因所在，解决这个问题就很容易了。<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1ffpwnm1wkfj20x40jrjvq.jpg" alt=""><br>在<code>IIS</code>控制台添加<code>MIME</code>类型，使<code>IIS</code>识别我们的<code>woff2</code>格式的字体。<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1ffpwp4pdshj20dn08p3ym.jpg" alt=""></p><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><p>重新访问我们的网站，查看<code>Console</code>，看是否有错误输出。<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1ffpwr43he9j20hg0650sm.jpg" alt=""><br>很好，问题已经解决:)</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Workflow插件 - 『豆瓣最新电影』]]></title>
      <url>https://www.mxvar.com/2017/04/21/workflow_doubanmovie/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>程序员有三大美德： 傲慢，懒惰以及缺乏耐性。</p></blockquote><p>当然这里的懒惰是指花费最少的力气，尽可能地节省时间来干更多的事情，而本文介绍的<code>Workflow</code>正是这样的一款可以帮助我们达到目的的<code>App</code>.</p><p><br>北京时间2017年3月23日星期四，苹果对<code>Workflow</code> 完成了收购。这款应用初期是由三个人的团队来开发，2015年<code>Workflow</code> 获得了<code>Apple Design Award</code>大奖:<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1feuli2jnybj20ki0dowib.jpg" alt=""></p><p><br>这款应用后来是由四人团队开发，被<code>Apple</code>收购后并入<code>Apple</code>公司。</p><p><br><code>Workflow</code> 不但有人性化的图形界面和易于理解的拖拽式交互，还内置了许多动作，可以省下使用者用来思考或操作的时间。比如你可以用 <code>Apple</code> 的 <code>API</code> 获取 <code>iTunes Store</code> 和 <code>App Store</code> 里商品的信息，但这个动作做出来会偏复杂。于是 <code>Workflow</code> 就直接提供了一组动作，可以非常直观地实现这个功能。</p><p><br>下面来讲讲一个下午完成的『豆瓣最新电影』插件:</p><p></p><h2 id="准备豆瓣最新电影的API"><a href="#准备豆瓣最新电影的API" class="headerlink" title="准备豆瓣最新电影的API"></a>准备豆瓣最新电影的API</h2><p>这个API可以从这里找到<a href="https://developers.douban.com/wiki/?title=oauth2" target="_blank" rel="external">豆瓣API</a>，可以看到这个API返回的是一段JSON数据：</p><p><br></p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"count"</span>: <span class="number">20</span>,</div><div class="line">    <span class="string">"start"</span>: <span class="number">0</span>,</div><div class="line">    <span class="string">"total"</span>: <span class="number">25</span>,</div><div class="line">    <span class="string">"subjects"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"rating"</span>: &#123;</div><div class="line">                <span class="string">"max"</span>: <span class="number">10</span>,</div><div class="line">                <span class="string">"average"</span>: <span class="number">7.3</span>,</div><div class="line">                <span class="string">"stars"</span>: <span class="string">"40"</span>,</div><div class="line">                <span class="string">"min"</span>: <span class="number">0</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"genres"</span>: [</div><div class="line">                <span class="string">"动作"</span>,</div><div class="line">                <span class="string">"犯罪"</span></div><div class="line">            ],</div><div class="line">            <span class="string">"title"</span>: <span class="string">"速度与激情8"</span>,</div><div class="line">            <span class="string">"casts"</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1041020/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/small/53186.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/large/53186.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/medium/53186.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"范·迪塞尔"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1041020"</span></div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1044707/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/small/196.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/large/196.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/medium/196.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"道恩·强森"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1044707"</span></div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1018991/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/small/44470.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/large/44470.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/medium/44470.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"查理兹·塞隆"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1018991"</span></div><div class="line">                &#125;</div><div class="line">            ],</div><div class="line">            <span class="string">"collect_count"</span>: <span class="number">87640</span>,</div><div class="line">            <span class="string">"original_title"</span>: <span class="string">"The Fate of the Furious"</span>,</div><div class="line">            <span class="string">"subtype"</span>: <span class="string">"movie"</span>,</div><div class="line">            <span class="string">"directors"</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1009396/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/small/4451.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/large/4451.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/medium/4451.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"F·加里·格雷"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1009396"</span></div><div class="line">                &#125;</div><div class="line">            ],</div><div class="line">            <span class="string">"year"</span>: <span class="string">"2017"</span>,</div><div class="line">            <span class="string">"images"</span>: &#123;</div><div class="line">                <span class="string">"small"</span>: <span class="string">"https://img3.doubanio.com/view/movie_poster_cover/ipst/public/p2444256500.webp"</span>,</div><div class="line">                <span class="string">"large"</span>: <span class="string">"https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p2444256500.webp"</span>,</div><div class="line">                <span class="string">"medium"</span>: <span class="string">"https://img3.doubanio.com/view/movie_poster_cover/spst/public/p2444256500.webp"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/subject/26260853/"</span>,</div><div class="line">            <span class="string">"id"</span>: <span class="string">"26260853"</span></div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">"rating"</span>: &#123;</div><div class="line">                <span class="string">"max"</span>: <span class="number">10</span>,</div><div class="line">                <span class="string">"average"</span>: <span class="number">6.5</span>,</div><div class="line">                <span class="string">"stars"</span>: <span class="string">"35"</span>,</div><div class="line">                <span class="string">"min"</span>: <span class="number">0</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"genres"</span>: [</div><div class="line">                <span class="string">"喜剧"</span>,</div><div class="line">                <span class="string">"动画"</span>,</div><div class="line">                <span class="string">"奇幻"</span></div><div class="line">            ],</div><div class="line">            <span class="string">"title"</span>: <span class="string">"蓝精灵：寻找神秘村"</span>,</div><div class="line">            <span class="string">"casts"</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1040983/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/small/414.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/large/414.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/medium/414.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"黛米·洛瓦托"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1040983"</span></div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1004593/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img1.doubanio.com/img/celebrity/small/9747.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img1.doubanio.com/img/celebrity/large/9747.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img1.doubanio.com/img/celebrity/medium/9747.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"雷恩·威尔森"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1004593"</span></div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1013768/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img1.doubanio.com/img/celebrity/small/57068.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img1.doubanio.com/img/celebrity/large/57068.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img1.doubanio.com/img/celebrity/medium/57068.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"乔·曼根尼罗"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1013768"</span></div><div class="line">                &#125;</div><div class="line">            ],</div><div class="line">            <span class="string">"collect_count"</span>: <span class="number">803</span>,</div><div class="line">            <span class="string">"original_title"</span>: <span class="string">"Smurfs: The Lost Village"</span>,</div><div class="line">            <span class="string">"subtype"</span>: <span class="string">"movie"</span>,</div><div class="line">            <span class="string">"directors"</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/celebrity/1014327/"</span>,</div><div class="line">                    <span class="string">"avatars"</span>: &#123;</div><div class="line">                        <span class="string">"small"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/small/1359185145.13.jpg"</span>,</div><div class="line">                        <span class="string">"large"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/large/1359185145.13.jpg"</span>,</div><div class="line">                        <span class="string">"medium"</span>: <span class="string">"https://img3.doubanio.com/img/celebrity/medium/1359185145.13.jpg"</span></div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">"name"</span>: <span class="string">"凯利·阿斯博瑞"</span>,</div><div class="line">                    <span class="string">"id"</span>: <span class="string">"1014327"</span></div><div class="line">                &#125;</div><div class="line">            ],</div><div class="line">            <span class="string">"year"</span>: <span class="string">"2017"</span>,</div><div class="line">            <span class="string">"images"</span>: &#123;</div><div class="line">                <span class="string">"small"</span>: <span class="string">"https://img1.doubanio.com/view/movie_poster_cover/ipst/public/p2443742358.webp"</span>,</div><div class="line">                <span class="string">"large"</span>: <span class="string">"https://img1.doubanio.com/view/movie_poster_cover/lpst/public/p2443742358.webp"</span>,</div><div class="line">                <span class="string">"medium"</span>: <span class="string">"https://img1.doubanio.com/view/movie_poster_cover/spst/public/p2443742358.webp"</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"alt"</span>: <span class="string">"https://movie.douban.com/subject/19899718/"</span>,</div><div class="line">            <span class="string">"id"</span>: <span class="string">"19899718"</span></div><div class="line">        &#125;,</div><div class="line"></div><div class="line">    ],</div><div class="line">    <span class="string">"title"</span>: <span class="string">"正在上映的电影-北京"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>因为服务器限制，这个JSON共包含了20个<code>subject</code>数据,由于篇幅过长，这里截取了2个<code>subject</code>,每个<code>subject</code>是一部电影的信息，包括<code>title</code>,<code>yaer</code>等其他信息。</p><p></p><h2 id="解析JSON数据"><a href="#解析JSON数据" class="headerlink" title="解析JSON数据"></a>解析JSON数据</h2><p>Workflow中的<code>Get Variable</code>可以很容易将JSON作为<code>Dictionary</code>以<code>&lt;key,value&gt;</code>的形式提取出来,这里首先是导出20个<code>subject</code>的内容，此时是输出20个电影的信息。<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewy65lpccj20ku112mzl.jpg" alt=""></p><h2 id="解析每部电影的信息"><a href="#解析每部电影的信息" class="headerlink" title="解析每部电影的信息"></a>解析每部电影的信息</h2><p>从上一步得到的是一个<code>List</code>数组，现在需要遍历这个<code>List</code>数组来提取出每部电影的详细信息，所以这里需要用到<code>Repeat with Each</code>这个<code>Action</code>用来循环，这里主要提取<code>title</code>,<code>year</code>,<code>average</code>，<code>images</code>这四个<code>key</code>的<code>value</code>值，对应这部电影的标题，上映年代，评分以及电影封面。<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewy8dirnhj20ku1120up.jpg" alt="title"><br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewy98y2huj20ku112419.jpg" alt="year,average"><br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewya5sp5qj20ku112gof.jpg" alt="images"></p><h2 id="输出信息"><a href="#输出信息" class="headerlink" title="输出信息"></a>输出信息</h2><p>这里是用的Workfow的<code>Notification</code>这个<code>Action</code>，也就是iOS的通知信息，当然，也可以选择其他的方式，比如HTML。</p><p><br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewy7gxv9vj20ku1120v3.jpg" alt=""></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Workflow是一款很有创造力和拓展性的<code>App</code>,用他我们可以实现很多在iOS中本来不能实现或者很难实现的<code>Action</code>.期待你的创意:)</p><p><br>最后展示下使用过程：<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewybdd3jzj20ku112ak4.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewyc1ab4bj20ku1127n6.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fewycd3xlbj20ku112kc3.jpg" alt=""><br>P.S. 『豆瓣最新电影』已经分享在了Workflow中了，<a href="https://workflow.is/workflows/68ea17e6e12148b8bacb45831baeda60" target="_blank" rel="external">点此</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[IIS7以上网站重定向到HTTPS]]></title>
      <url>https://www.mxvar.com/2017/04/14/https-redirect/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><p>前面博客文章提到了使用JavaScript来强制使访问HTTP的页面来跳转到对应的HTTPS页面，嗯，毕竟Google Chrome 浏览器已经把未启用SSL的网站直接标记为不安全了，直接使用JavaScript来跳转的话，会使SEO出现很大的问题，导致百度蜘蛛无法抓取到自己的网站，搜索引擎也就无法收录了，使用下面的URL Rewrite方案即可解决这一问题。</p><h2 id="安装URL-Rewrite模块"><a href="#安装URL-Rewrite模块" class="headerlink" title="安装URL Rewrite模块"></a>安装URL Rewrite模块</h2><p>IIS7及以上安装URL Rewrite模块，下载<a href="https://www.iis.net/downloads/microsoft/url-rewrite" target="_blank" rel="external">URI Rewrite模块扩展</a>，点击安装，重启IIS。</p><h2 id="在URL-Rewrite配置重定向规则"><a href="#在URL-Rewrite配置重定向规则" class="headerlink" title="在URL Rewrite配置重定向规则"></a>在URL Rewrite配置重定向规则</h2><ol><li>打开<code>URL Rewrite</code>模块;<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1femkkdl3fij204003ba9y.jpg" alt=""></li><li>点击右侧栏的<code>添加规则</code>;<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1femkl5o9puj20lf0evwf6.jpg" alt=""></li><li>选择<code>空白规则</code>;<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1femklw0qf5j20jc0e3wev.jpg" alt=""></li><li><code>Name</code>可以随便填写，<code>Requested URL</code>选择为<code>Matches the Pattern</code>,<code>Using</code>选择为<code>Regular Expressions</code>,<code>Patter</code>填写为<code>(.*)</code>;<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1femkot3jljj20jn093dft.jpg" alt=""></li><li>在条件中添加如下两条记录：<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1femkm2e2lvj20do0afweh.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1femkmb01ebj20dy0ap0sq.jpg" alt=""></li><li>在动作一栏中添加如下:<code>Redirect URL</code>填写为<code>https://{HTTP_HOST}:443/{R:1}</code> 注意这里是花括号，不是小括号，<code>Redirect type</code>选择为 <code>Permanent(301)</code>，也就是永久性重定向,最后选择应用即可；<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1femkmhex8wj20jk0a1mx6.jpg" alt=""></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用VS Code写PHP并进行调试]]></title>
      <url>https://www.mxvar.com/2017/03/23/vscode/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>VS Code（Visual Studio Code）是由微软研发的一款免费、开源的跨平台文本（代码）编辑器。</p></blockquote><ol><li><p>先从官网下载安装好VS Code.官方下载地址是<a href="https://code.visualstudio.com/" target="_blank" rel="external">https://code.visualstudio.com/</a><br><img src="https://ws4.sinaimg.cn/large/9907b0efgy1fdot709hg9j211y0gztd6.jpg" alt=""></p></li><li><p>安装PHP套件，这是用的是XAMPP套件(集成Apache,MySQL,FileZilla,Mercury,Tomcat等开发环境)。下载链接 <a href="https://www.apachefriends.org/zh_cn/index.html" target="_blank" rel="external">https://www.apachefriends.org/zh_cn/index.html</a><br><img src="https://ws2.sinaimg.cn/large/9907b0efgy1fdou4gp310j20r50hb406.jpg" alt=""></p></li><li><p>打开VS Code,安装 php-debug扩展，Ctrl +P,输入 ext install php-debug 回车，点击安装扩展。<br><img src="https://ws1.sinaimg.cn/large/9907b0efgy1fdou6w7mqzj20es0dpq4s.jpg" alt=""></p></li><li><p>配置用户的设置：<br><img src="https://ws3.sinaimg.cn/large/9907b0efgy1fdou8lfbmuj20gj0d20u0.jpg" alt=""></p></li><li>配置PHP路径：<br><img src="https://ws2.sinaimg.cn/large/9907b0efgy1fdou9wsv1lj20fp09xgmh.jpg" alt="">​将 php.validate.executablePath”: “G:/xampp/php/php.exe” 当然，后面的路径要根据XAMPP的安装路径来更改，还有就是要在上条语句后面加个英文状态下的逗号。</li><li>将PHP文件置于Apache的启动目录下：<br><img src="https://ws3.sinaimg.cn/large/9907b0efgy1fdoudaxaicj20lv05bq35.jpg" alt=""></li><li>启动Apache服务器：<br><img src="https://ws2.sinaimg.cn/large/9907b0efgy1fdouele5mij20iy0c9wfh.jpg" alt=""></li><li>打开PHP文件，在指定行按F9设置断点然后启动调试.</li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Windows 10 开启上帝模式]]></title>
      <url>https://www.mxvar.com/2017/02/14/godmode/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>从Windows Vista 时代开始，微软就在系统中加入了上帝模式，来方便开发者或支持人员快速更改系统的设置，无需在菜单只中一个一个查找选项。</p></blockquote><p>接下来就是上帝模式在 Windows 10 中的开启方法:</p><ol><li><p>在桌面新建一个文件夹。</p><p><img src="https://ws2.sinaimg.cn/large/9907b0efjw1fcq9vikt3ij204902wwed.jpg" alt=""></p></li><li>将刚才的文件夹重命名，重命名为 <code>GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}</code> ，然后保存即可。</li><li>这时候就会惊奇地发现一个命名为<code>GodMode</code> 的文件出现，其图标和控制面板一样。<br><img src="https://ws4.sinaimg.cn/large/9907b0efjw1fcq9vugpfhj204e02st8l.jpg" alt=""></li><li>双击打开，发现其布局和控制面板差不多，只是内容是更加丰富。<br><img src="https://ws2.sinaimg.cn/large/9907b0efjw1fcq9vzelt7j20z20jnn3r.jpg" alt=""></li></ol><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决在Outlook中添加QQ邮箱提醒账户设置过期的问题]]></title>
      <url>https://www.mxvar.com/2016/11/24/qq_mail/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>很多人在outlook邮箱中添加QQ邮箱或者163邮箱后，系统会不时提醒邮箱账户设置已过期，重新添加后仍然出现此提示，很是烦人。</p></blockquote><h2 id="以下以QQ邮箱作为示例："><a href="#以下以QQ邮箱作为示例：" class="headerlink" title="以下以QQ邮箱作为示例："></a>以下以QQ邮箱作为示例：</h2><ol><li>首先登录QQ邮箱的网页版，进入设置-&gt;账户 找到如下图所示的选项：<br><img src="https://ws4.sinaimg.cn/large/9907b0efjw1fa3doofcjcj20m306uaby.jpg" alt="此处输入图片的描述"></li><li>把POP3/SMTP服务和IMAP/SMTP服务开启，点击生成授权码。<br><img src="https://ws3.sinaimg.cn/large/9907b0efjw1fa3dqmc11nj20ce08iwff.jpg" alt="此处输入图片的描述"></li><li>按照图中的操作说明，用绑定的手机来发送图中要求的一串字符到指定的号码(如果不知道手机号码或者号码遗失，就只能申诉了)，发送后，点击图中的”我已发送”按钮，腾讯服务器确认身份后会生成如图所示的授权码：<br><img src="https://ws3.sinaimg.cn/large/9907b0efjw1fa3dpipm2fj20e508sdgp.jpg" alt="此处输入图片的描述"></li><li>复制授权码，在Outlook邮箱添加账户的时候，输入邮箱地址，密码栏粘贴刚才生成的授权码，点击登录即可。<br><img src="https://ws2.sinaimg.cn/large/9907b0efjw1fa3drdf4s1j20d40dsgme.jpg" alt="此处输入图片的描述"></li><li>如果验证通过，会提示设置成功，这样以后就不会再出现邮箱账户过期的提示了。<br><img src="https://ws4.sinaimg.cn/large/9907b0efjw1fa3dru7hbwj20d40ds0t1.jpg" alt="此处输入图片的描述"><br>P.S.163邮箱也是同样的操作。</li></ol><h2 id="什么是授权码？"><a href="#什么是授权码？" class="headerlink" title="什么是授权码？"></a>什么是授权码？</h2><p>QQ邮箱官方给的解释是：</p><blockquote><p>授权码是QQ邮箱推出的，用于登录第三方客户端的专用密码。<br>适用于登录以下服务：POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务。<br>温馨提醒：为了你的帐户安全，更改QQ密码以及独立密码会触发授权码过期，需要重新获取新的授权码登录。</p></blockquote><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[IIS 强制启用HTTPS跳转]]></title>
      <url>https://www.mxvar.com/2016/11/20/https_config/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>HTTPS（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。 它是一个URI scheme（抽象标识符体系），句法类同http:体系。用于安全的HTTP数据传输。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间）。这个系统的最初研发由网景公司(Netscape)进行，并内置于其浏览器Netscape Navigator中，提供了身份验证与加密通讯方法。</p></blockquote><p>自从百度启用https搜索并且优先收录https网站后，越来也多的站点开始部署https，那么在部署https的过程了会遇到一个问题，那就是http自动跳转https的问题，因为过去很长一段时间，大部分网站都是http访问，突然换成https访问，很多人还反应不过来，所以我们网站需要设置http自动跳转到https，那么https配置过程中不同的服务器版本配置http自动跳转https方法上面存在差异。</p><p>修改以下文件：<br>IIS6.0 路径：</p><pre><code>C:\WINDOWS\Help\iisHelp\common\403-4.htm
</code></pre><p>IIS7.0以上路径：</p><pre><code>C:\inetpub\custerr\zh-CN\403.htm
</code></pre><p>将上述的文件更改为：<br></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span><span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>该页必须通过安全通道查看<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">”Content-Type”</span> <span class="attr">Content</span>=<span class="string">”text/html;</span> <span class="attr">charset</span>=<span class="string">GB2312″</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span><span class="tag">&lt;<span class="name">BODY</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">”text/javascript”</span>&gt;</span><span class="xml"></span></div><div class="line">    var url = window.location.href;</div><div class="line">    if (url.indexOf(“https”) <span class="tag">&lt; <span class="attr">0</span>) &#123;</span></div><div class="line">        <span class="attr">url</span> = <span class="string">url.replace(“http:”,</span> “<span class="attr">https:</span>”);</div><div class="line">        <span class="attr">window.location.replace</span>(<span class="attr">url</span>);</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></div></pre></td></tr></table></figure><p></p><p>同时在IIS6中，站点属性–&gt;目录安全性–&gt;编辑中把”要求安全通道（SSL）”勾选上.<br>在IIS7、8中，SSL设置–&gt;把”要求SSL”勾选.<br>现在网站能够实现访问http页面强制跳转https页面了:)</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[提取Windows 10的锁屏聚焦壁纸]]></title>
      <url>https://www.mxvar.com/2016/11/12/spotLight/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><blockquote><p>聚焦(Spotlight)是Windows 10相对于以前的Windows版本新增的一款提供锁屏壁纸的功能。</p></blockquote><p>非常漂亮的图片只能显示在锁屏上，是不是很可惜，想要将此作为壁纸或者其他用途，该怎么办呢？下面开始提取聚焦壁纸。</p><p>1.按<code>win</code>+<code>R</code>调出运行窗口或者在资源管理器的地址栏输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%localappdata%\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets</div></pre></td></tr></table></figure><p><img src="https://ws4.sinaimg.cn/large/9907b0efjw1f9xx0mdf00j20bh05xt9l.jpg" alt=""><br>就会进入聚焦壁纸的文件夹<code>Assets</code>,能看见很多没有格式后缀名的文件。<br><img src="https://ws2.sinaimg.cn/large/9907b0efjw1f9xx15ln3hj20x70iitid.jpg" alt=""><br>2.在<code>Assets</code>文件夹下按<code>shift</code>+鼠标右键，选择从<code>此处打开命令窗口</code>，输入<br></p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ren *.* *.jpg</div></pre></td></tr></table></figure><p></p><p>回车，将所有文件重命名为<code>.jpg</code>文件，这时候就能看到原本只能在锁屏上显示的图片了，是不是很漂亮？</p><p>下面展示我的电脑上面的聚焦壁纸：<br><img src="https://ws4.sinaimg.cn/large/9907b0efjw1f9xx1jfzbzj21hc0u0wre.jpg" alt=""></p><p><img src="https://ws3.sinaimg.cn/large/9907b0efjw1f9xx3xxntrj21hc0u049n.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/9907b0efjw1f9xx4uy9s0j21hc0u0awo.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/9907b0efjw1f9xx5h7ahdj21hc0u04l1.jpg" alt=""></p><p><img src="https://ws2.sinaimg.cn/large/9907b0efjw1f9xx2xp5wsj21hc0u015q.jpg" alt=""></p><p>P.S. <code>Assets</code>文件夹里面不仅包括PC上的聚焦壁纸，还包括展示在锁屏上的应用图标，如：网易云音乐，Xbox应用；同时还包含Windows 10 Mobile手机上面的聚焦壁纸，选择按照Size 大小排序即可分辨。</p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[处理UWP程序的Back后退键]]></title>
      <url>https://www.mxvar.com/2016/11/11/UWP-back-btn/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><h1 id="什么是UWP"><a href="#什么是UWP" class="headerlink" title="什么是UWP"></a>什么是UWP</h1><blockquote><p>UWP即Windows 10 中的Universal Windows Platform简称。即Windows通用应用平台，在Windows 10 Mobile(Lumia 系列等)/Surface(Windows平板电脑）/PC/Xbox/HoloLens等平台上运行，UWP不同于传统PC上的exe应用,并且和只适用于手机端的app有本质区别。它并不是为某一个终端而设计，而是可以在所有Windows10设备上运行。一款UWP应用针对各平台的代码大部分都是通用的（一个项目），只有很小一部分是平台特定的。在发布到应用商店时需要针对不同平台（处理器）分别编译。</p></blockquote><p>介绍完什么是UWP，下面谈谈在UWP应用程序开发的过程中必须要处理的问题。</p><p>UWP应用程序的后退按钮是需要开发者自己处理的。因为在新建Project 的时候，项目模板并不包含后退键的处理代码。</p><p>下面开始后退按钮的处理方法：</p><p>首先，新建一个空白项目：<br><img src="https://ws2.sinaimg.cn/large/9907b0efjw1f9xwofb2bsj20qj0g6aem.jpg" alt="新建空白模板"></p><p>空白模板建立成功后，我们需要对此项目添加程序集的引用。<br><img src="https://ws3.sinaimg.cn/large/9907b0efjw1f9xwlkltvfj20gw0egac3.jpg" alt="Project右键 Add Reference"><br><img src="https://ws3.sinaimg.cn/large/9907b0efjw1f9xwmhvgfnj20m80fawl2.jpg" alt="添加对Mobile设备的程序集引用"><br>之后打开Projcet的<code>App.xaml.cs</code>文件。<br>在<code>OnLaunched</code>方法中 添加如下判断代码：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="string">"Windows.Mobile"</span> == Windows.System.Profile.AnalyticsInfo.VersionInfo.DeviceFamily)</div><div class="line">                Windows.Phone.UI.Input.HardwareButtons.BackPressed += HardwareButtons_BackPressed;</div></pre></td></tr></table></figure><p></p><p>用来判断程序运行的设备是否是Mobile。</p><p>然后同样在<code>App.xaml.cs</code>文件中添加以下方法：<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HardwareButtons_BackPressed</span>(<span class="params"><span class="keyword">object</span> sender, Windows.Phone.UI.Input.BackPressedEventArgs e</span>)</span></div><div class="line">&#123;</div><div class="line">       <span class="keyword">var</span> rootFrame = Window.Current.Content <span class="keyword">as</span> Frame;</div><div class="line">       <span class="keyword">if</span> (rootFrame.CanGoBack)</div><div class="line">       &#123;</div><div class="line">             rootFrame.GoBack();</div><div class="line">             e.Handled = <span class="literal">true</span>;</div><div class="line">       &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>此方法是注册按下后退按钮的事件，用来返回上一个页面。</p><p>以上就可以正确处理UWP程序的后退按钮。</p><h2 id="P-S-如何在后退时保持前一个页面的状态-防止被重新载入？"><a href="#P-S-如何在后退时保持前一个页面的状态-防止被重新载入？" class="headerlink" title="P.S.如何在后退时保持前一个页面的状态,防止被重新载入？"></a>P.S.如何在后退时保持前一个页面的状态,防止被重新载入？</h2><p>需要在前一个页面的构造函数里加NavigationCacheMode即可，来打开页面导航的缓存。<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">MainPage</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line">    InitializeComponent();</div><div class="line">    NavigationCacheMode = NavigationCacheMode.Enabled;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://www.mxvar.com/2016/11/08/hello_world/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Sep 13 2018 00:44:13 GMT+0800 (中国标准时间) --><p>Welcome to my Blog.这是我的第一篇博文，是一个程序员按例向这个世界打招呼的形式。在这里，我会分享很多有关Computer，Mobile以及其他有趣的事情。敬请期待!:)</p><h2 id="来自程序员的问候！"><a href="#来自程序员的问候！" class="headerlink" title="来自程序员的问候！"></a>来自程序员的问候！</h2><h3 id="C-语言版本"><a href="#C-语言版本" class="headerlink" title="C 语言版本"></a>C 语言版本</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World!"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>More info: <a href="http://weibo.com/tangxianmeng" target="_blank" rel="external">我的微博</a></p><!-- rebuild by neat -->]]></content>
    </entry>
    
  
  
</search>
